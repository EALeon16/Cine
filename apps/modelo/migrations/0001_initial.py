# Generated by Django 2.2.5 on 2020-02-28 20:18

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Persona',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('persona_id', models.AutoField(primary_key=True, serialize=False)),
                ('fechaNacimiento', models.DateField(null=True)),
                ('edad', models.CharField(max_length=25, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Pelicula',
            fields=[
                ('pelicula_id', models.AutoField(primary_key=True, serialize=False)),
                ('nombre_pelicula', models.CharField(max_length=75, unique=True)),
                ('genero', models.CharField(max_length=50)),
                ('sinopsis', models.CharField(max_length=50)),
                ('clasificacion', models.CharField(choices=[('A', '"A" - Aptas para todo publico'), ('B', '"B" - Películas para adolescentes de 12 años en adelante'), ('B15', '"B15" - Película no recomendable para menores de 15 años de edad'), ('C', '"C" - Películas para adultos de 18 años en adelante'), ('D', '"D" - Películas para adultos, con sexo explícito')], default='"A" - Aptas para todo publico', max_length=15)),
                ('fechaLanzamiento', models.DateField()),
                ('duracion', models.CharField(max_length=25)),
                ('proyeccion', models.CharField(choices=[('si', 'Si'), ('no', 'No')], max_length=15)),
                ('director', models.CharField(max_length=25)),
                ('protagonistas', models.TextField(default='n/a', max_length=50)),
                ('imagen', models.ImageField(null=True, upload_to='portadas')),
            ],
        ),
        migrations.CreateModel(
            name='Rol',
            fields=[
                ('rol_id', models.AutoField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Sala',
            fields=[
                ('sala_id', models.AutoField(primary_key=True, serialize=False)),
                ('nombre_sala', models.CharField(max_length=75, unique=True)),
                ('nro_asientos', models.IntegerField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Horario',
            fields=[
                ('horario_id', models.AutoField(primary_key=True, serialize=False)),
                ('hora_pelicula', models.TimeField()),
                ('fecha_pelicua', models.DateField()),
                ('calidad_pelicula', models.CharField(choices=[('2D', '2D'), ('2D-4K', '2D-4K'), ('3D', '3D'), ('3D-4K', '3D-4K')], default='2D', max_length=50)),
                ('pelicula', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='modelo.Pelicula')),
                ('sala', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='modelo.Sala')),
            ],
        ),
        migrations.CreateModel(
            name='Boleto',
            fields=[
                ('boleto_id', models.AutoField(primary_key=True, serialize=False)),
                ('cantidad_boletoN', models.IntegerField(max_length=10)),
                ('cantidad_boletoE', models.IntegerField(max_length=10)),
                ('total_boleto', models.IntegerField(max_length=10)),
                ('precio_total', models.DecimalField(decimal_places=3, max_digits=10)),
                ('horario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='modelo.Horario')),
                ('persona', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='persona',
            name='rol',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='modelo.Rol'),
        ),
        migrations.AddField(
            model_name='persona',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
